{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Partner Audit Api",
    "description": "API's for querying Partner Center audit records",
    "version": "v1"
  },
  "host": "api.partnercenter.microsoft.com",
  "basePath": "/auditactivity",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v{version}/auditrecords": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Gets the audit records between a given date range\r\nIf the number of records is more than a page full, a continuation token will be returned and the continuation token can be used to get the next set of audit records.\r\nThis service only supports AuditRecord retrieval for the last 90 days and a maximum window of 30 days.",
        "operationId": "Gets the audit records for a given date range. If the number of records exceeds the page size, a continuation token is returned. The continuation token can be used to get the next page of audit records.",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "auditRequest.filter.field",
            "in": "query"
          },
          {
            "type": "string",
            "name": "auditRequest.filter.value",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "auditRequest.filter.operator",
            "in": "query",
            "enum": [
              "equals",
              "not_equals",
              "greater_than",
              "greater_than_or_equals",
              "less_than",
              "less_than_or_equals",
              "substring",
              "and",
              "or",
              "starts_with",
              "not_starts_with"
            ],
            "format": "int32"
          },
          {
            "type": "string",
            "name": "auditRequest.startDate",
            "in": "query",
            "required": true,
            "format": "date-time"
          },
          {
            "type": "string",
            "name": "auditRequest.endDate",
            "in": "query",
            "format": "date-time"
          },
          {
            "type": "integer",
            "name": "auditRequest.size",
            "in": "query",
            "format": "int32"
          },
          {
            "type": "string",
            "name": "ms-correlationid",
            "in": "header",
            "description": "Correlation Id"
          },
          {
            "type": "string",
            "name": "ms-requestid",
            "in": "header",
            "description": "Request Id"
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Append Authorization token. Format: Bearer %token%",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful. The response body contains a list of the audit records that match the filter. A continuation token is included if the response is paged by the page size. This token can be passed to /auditRecords?seek=<seek> to seek audit results.",
            "schema": {
              "$ref": "#/definitions/PagedResourceCollection[AuditRecord]"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "404": {
            "description": "The resource is not found or not available with the given input parameters."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v{version}/auditrecords/{id}": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Gets the audit record for the provided Id.",
        "operationId": "Retrieves an audit record which corresponds to the provided Id value.",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the record to be retrieved"
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ms-correlationid",
            "in": "header",
            "description": "Correlation Id"
          },
          {
            "type": "string",
            "name": "ms-requestid",
            "in": "header",
            "description": "Request Id"
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Append Authorization token. Format: Bearer %token%",
            "default": "Bearer "
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful. The response body contains an audit record matching the Id or null if the record does not exist. ",
            "schema": {
              "$ref": "#/definitions/AuditRecord"
            }
          },
          "400": {
            "description": "There was a missing or an invalid input. The response body will provide the error details."
          },
          "404": {
            "description": "The resource is not found or not available with the given input parameters."
          },
          "500": {
            "description": "The partner API service or one of its dependencies failed to fulfill the request. Callers may retry this."
          },
          "401": {
            "description": "The request was not authenticated. The client needs to authenticate with the partner API service first."
          },
          "403": {
            "description": "The request was authenticated but was refused since the caller does not have the rights to invoke it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AuditRequest": {
      "type": "object",
      "x-typeName": "AuditRequest",
      "required": [
        "startDate"
      ],
      "properties": {
        "filter": {
          "$ref": "#/definitions/SimpleFieldFilter"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SimpleFieldFilter": {
      "type": "object",
      "x-typeName": "SimpleFieldFilter",
      "properties": {
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "operator": {
          "type": "integer",
          "enum": [
            "equals",
            "not_equals",
            "greater_than",
            "greater_than_or_equals",
            "less_than",
            "less_than_or_equals",
            "substring",
            "and",
            "or",
            "starts_with",
            "not_starts_with"
          ],
          "format": "int32"
        }
      }
    },
    "PagedResourceCollection[AuditRecord]": {
      "type": "object",
      "x-typeName": "PagedResourceCollection[AuditRecord]",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "totalCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "items": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AuditRecord"
          }
        },
        "links": {
          "$ref": "#/definitions/ResourceLinks"
        },
        "attributes": {
          "readOnly": true,
          "$ref": "#/definitions/ResourceAttributes"
        }
      }
    },
    "AuditRecord": {
      "type": "object",
      "x-typeName": "AuditRecord",
      "required": [
        "partnerId",
        "customerId",
        "applicationId",
        "resourceType",
        "operationType",
        "operationDate"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "userPrincipalName": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "resourceType": {
          "type": "integer",
          "enum": [
            "customer",
            "customer_user",
            "order",
            "subscription",
            "license",
            "third_party_add_on",
            "mpn_association",
            "transfer"
          ],
          "format": "int32"
        },
        "resourceOldValue": {
          "type": "string"
        },
        "resourceNewValue": {
          "type": "string"
        },
        "operationType": {
          "type": "integer",
          "enum": [
            "update_customer_qualification",
            "update_subscription",
            "upgrade_subscription",
            "convert_trial_subscription",
            "add_customer",
            "update_customer_billing_profile",
            "update_customer_partner_contract_company_name",
            "update_customer_spending_budget",
            "delete_customer",
            "remove_partner_customer_relationship",
            "create_order",
            "update_order",
            "create_customer_user",
            "delete_customer_user",
            "update_customer_user",
            "update_customer_user_licenses",
            "reset_customer_user_password",
            "update_customer_user_principal_name",
            "restore_customer_user",
            "create_mpn_association",
            "update_mpn_association",
            "update_sfb_customer_user_licenses",
            "update_transfer"
          ],
          "format": "int32"
        },
        "originalCorrelationId": {
          "type": "string"
        },
        "operationDate": {
          "type": "string",
          "format": "date-time"
        },
        "operationStatus": {
          "type": "integer",
          "enum": [
            "succeeded",
            "failed",
            "progress",
            "decline"
          ],
          "format": "int32"
        },
        "customizedData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair[String,String]"
          }
        },
        "attributes": {
          "readOnly": true,
          "$ref": "#/definitions/ResourceAttributes"
        }
      }
    },
    "ResourceLinks": {
      "type": "object",
      "x-typeName": "ResourceLinks",
      "properties": {
        "self": {
          "$ref": "#/definitions/Link"
        },
        "next": {
          "$ref": "#/definitions/Link"
        },
        "previous": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "ResourceAttributes": {
      "type": "object",
      "x-typeName": "ResourceAttributes",
      "properties": {
        "etag": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        }
      }
    },
    "KeyValuePair[String,String]": {
      "type": "object",
      "x-typeName": "KeyValuePair[String,String]",
      "properties": {
        "key": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Link": {
      "type": "object",
      "x-typeName": "Link",
      "properties": {
        "uri": {
          "type": "string",
          "readOnly": true
        },
        "method": {
          "type": "string",
          "readOnly": true
        },
        "body": {
          "type": "string",
          "readOnly": true
        },
        "headers": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/KeyValuePair[String,String]"
          }
        }
      }
    }
  },
  "responses": {},
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Bearer authentication token",
      "name": "Authorization",
      "in": "header"
    }
  }
}
